[tool.poetry]
name = "codebase-assistant"
version = "0.1.0"
description = "LLM-powered codebase Q&A using LangGraph + LangChain"
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "ingestion" }, { include = "langgraph_flow" }, { include = "streamlit_app" }]

[tool.poetry.dependencies]
python = "^3.11"
langgraph = "*"
langchain = "*"
openai = ">=1.93.0,<2.0.0"
chromadb = "*"
gitpython = "^3.1.31"
tiktoken = ">=0.9.0,<0.10.0"
python-dotenv = "^1.0.0"
streamlit = "^1.25.0"
toml = "^0.10.2"
langchain-community = "^0.3.25"
langchain-openai = "^0.3.28"
langchain-chroma = "^0.2.5"


[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
isort = "^5.12.0"
ruff = "^0.11.4"
pre-commit = "^4.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py311"  # or whatever your Python version is
fix = true  # Enable autofix
exclude = [
    "pyproject.toml",
    "data/",
    "build/",
    ".venv/",
]

[tool.ruff.lint]
select = ["E", "F", "I", "B"]
ignore = ["E501"]  # Example: ignore long lines if you want

[tool.ruff.format]
quote-style = "double"  # or "single"
indent-style = "space"
docstring-code-format = true


[tool.isort]
profile = "black"  # aligns spacing and line wrapping with ruff-format
line_length = 80   # match [tool.ruff].line-length
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true